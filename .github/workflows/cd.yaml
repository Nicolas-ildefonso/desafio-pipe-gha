name: Workflow lab

on:
  push:
    branches:
      - main

jobs: 

  build:
    name: Build app
    runs-on:  self-hosted

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar o Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
#      - name: Testes unitários
#        env:
#          PYTHONPATH: src
#        run: pytest src/tests/ --cov=src/flaskr

      - name: Construir a aplicação
        run: |
          mkdir -p build
          tar -czf build/flask-app.tar.gz src/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: flask-app
          path: build/
  release:
    needs: 
      - build
    runs-on:  self-hosted

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4.1.9
        with:
          name: flask-app

      - name: incrementar version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: v

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          artifacts: flask-app.tar.gz
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Esta release foi gerada automaticamente como parte do pipeline de CI/CD.

            **Detalhes da Release:**
            - **Tag:** ${{ steps.tag_version.outputs.new_tag }}
            - **Commit associado:** ${{ github.sha }}
            - **Branch:** ${{ github.ref_name }}
  deploy:
      needs: 
        - build
        - release
      runs-on: self-hosted
      environment:
        name: production 
    
      steps:
        - name: Aprovação para deploy
          run: echo "Aguardando aprovação para deploy."
      
        - name: Deploy para produção
          run: |
            echo "Realizando deploy em produção..."
            
        - name: Download artifact
          uses: actions/download-artifact@v4.1.9
          with:
            name: flask-app                
##########-Simulação deploy-############### 
#        - name: Extrair o artefato
#          run: |
#            mkdir -p app
#            tar -xzf flask-app.tar.gz -C app
        
#        - name: Configurar o Python
#          uses: actions/setup-python@v4
#          with:
#            python-version: 3.9

#        - name: Instalar dependências
#          run: |
#            python -m pip install --upgrade pip
#           pip install -r requirements.txt

#        - name: Subir a aplicação Flask localmente
#          run: |
#            cd app/src
#            nohup flask --app flaskr run --host=0.0.0.0 --port=5000 &
#            echo "Aplicação Flask iniciada em http://localhost:5000"

#        - name: Verificar se a aplicação está rodando
#          run: |
#            curl -f http://localhost:5000 || echo "A aplicação não está respondendo."

  notify:
      #if: failure() 
      if: always()
      runs-on: ubuntu-latest

      steps:
        - name: Enviar notificação por e-mail
          uses: dawidd6/action-send-mail@v3
          with:
            server_address: smtp.gmail.com
            server_port: 465
            username: ${{secrets.EMAIL_USERNAME}}
            password: ${{secrets.EMAIL_PASSWORD}}
            subject: "Falha no Pipeline: ${{ github.workflow }}"
            to: ${{secrets.EMAIL_TO}}
            from: ${{secrets.EMAIL_FROM}}
            secure: true
            body: |
              O pipeline falhou durante a execução.

              **Detalhes:**
              - **Workflow:** ${{ github.workflow }}
              - **Job:** ${{ github.job }}
              - **Commit:** ${{ github.sha }}
              - **Autor:** ${{ github.actor }}
              - **Repositório:** ${{ github.repository }}
              - **Branch:** ${{ github.ref_name }}
